// This file is part of coursework 2 for COMP1212
// which follows the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// Written by Sam Wilson

/**
 * Memory of 64 registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then
 * the x value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM64 {
    IN x[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[3..5],s=s, t=t, u=u, v=v, w=w, x=x1, y=y, z=z);

    RAM8(x=x,load=s,address=address[0..2],out=o1);
    RAM8(x=x,load=t,address=address[0..2],out=o2);
    RAM8(x=x,load=u,address=address[0..2],out=o3);
    RAM8(x=x,load=v,address=address[0..2],out=o4);
    RAM8(x=x,load=w,address=address[0..2],out=o5);
    RAM8(x=x,load=x1,address=address[0..2],out=o6);
    RAM8(x=x,load=y,address=address[0..2],out=o7);
    RAM8(x=x,load=z,address=address[0..2],out=o8);

    Mux8Way16(s=o1,t=o2,u=o3,v=o4,w=o5,x=o6,y=o7,z=o8,sel=address[3..5],out=out);
}
